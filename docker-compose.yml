version: '3'
services:
  zookeeper:
    image: 'confluentinc/cp-zookeeper:7.3.0'
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    networks:
      - elevate_net
    logging:
      driver: none
  kafka:
    image: 'confluentinc/cp-kafka:7.3.0'
    container_name: kafka
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - elevate_net
    logging:
      driver: none
  mongo:
    image: 'mongo:4.1.4'
    container_name: mongo
    restart: 'always'
    command:
      - '--logpath'
      - '/var/log/mongodb/mongod.log'
    ports:
      - '27017:27017'
    networks:
      - elevate_net
    volumes:
      - mongo-data:/data/db
      - logs:/var/log/mongodb
  redis:
    image: 'redis:7.0.0'
    container_name: redis
    restart: 'always'
    ports:
      - '6379:6379'
    networks:
      - elevate_net
    logging:
      driver: none
  # mentoring:
  #   # update image url with latest one:
  #   image: shikshalokamqa/elevate-mentoring:2.5.6
  #   container_name: mentoring
  #   ports:
  #     - '3000:3000'
  #   command: >
  #     bash -c "npm run db:init && npm run db:seed:all && (echo 'Running nodeee' && nodemon app.js &); (while ! curl -sSf http://mentoring:3000 > /dev/null; do sleep 1; done && echo 'Service is up' && /bin/bash -c 'cd scripts && echo Running script && node psqlFunction.js && node viewsScript.js'); tail -f /dev/null"
  #   environment:
  #     - KAFKA_URL=kafka:9092
  #     - USER_SERIVCE_HOST=http://user:3001
  #     - REDIS_HOST=redis://redis:6379
  #     - DEV_DATABASE_URL=postgres://postgres:postgres@citus_master:5432/elevate-mentoring
  #     - SCHEDULER_SERVICE_HOST=http://scheduler:4000
  #   depends_on:
  #     - kafka
  #     - redis
  #     - citus
  #   networks:
  #     - elevate_net
  #   env_file:
  #     - ${mentoring_env}
  user:
    image: shikshalokamqa/elevate-user:2.5.6
    container_name: user
    ports:
      - '3001:3001'
    command: >
      bash -c "npm run db:init && npm run db:seed:all && (echo 'Running node' && nodemon app.js &); (while ! curl -sSf http://user:3001 > /dev/null; do sleep 1; done && echo 'Service is up' && /bin/bash -c 'cd scripts && echo Running script && node insertDefaultOrg.js && node viewsScript.js') ; tail -f /dev/null"
    environment:
      - KAFKA_URL=kafka:9092
      - REDIS_HOST=redis://redis:6379
      - DEV_DATABASE_URL=postgres://postgres:postgres@citus_master:5432/elevate-user
    depends_on:
      - kafka
      - redis
      - citus
    networks:
      - elevate_net
    env_file:
      - ${users_env}
  # notification:
  #   image: shikshalokamqa/elevate-notification:2.5
  #   container_name: notification
  #   ports:
  #     - '3002:3002'
  #   command: >
  #     bash -c "npm run db:init && nodemon app.js"
  #   environment:
  #     - KAFKA_HOST=kafka:9092
  #     - DEV_DATABASE_URL=postgres://postgres:postgres@citus_master:5432/elevate-notification
  #   depends_on:
  #     - kafka
  #     - citus
  #   networks:
  #     - elevate_net
  #   env_file:
  #     - ${notification_env}
  # scheduler:
  #   image: shikshalokamqa/elevate-scheduler:2.5.2
  #   container_name: scheduler
  #   ports:
  #     - '4000:4000'
  #   command: ['nodemon', 'app.js']
  #   environment:
  #     - KAFKA_URL=kafka:9092
  #   env_file:
  #     - ${scheduler_env}
  #   depends_on:
  #     - kafka
  #     - redis
  #   networks:
  #     - elevate_net
  interface:
    # Update with latest image
    image: shikshalokamqa/elevate-interface:2.5
    container_name: interface
    ports:
      - '3569:3569'
    command: ['node', 'app.js']
    networks:
      - elevate_net
    env_file:
      - ${interface_env}
  citus:
    image: citusdata/citus:11.2.0
    container_name: 'citus_master'
    ports:
      - 5432:5432
    environment: &AUTH
      POSTGRES_USER: '${POSTGRES_USER:-postgres}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD:-postgres}'
      PGUSER: '${POSTGRES_USER:-postgres}'
      PGPASSWORD: '${POSTGRES_PASSWORD:-postgres}'
      POSTGRES_DB: 'postgres'
      POSTGRES_HOST_AUTH_METHOD: '${POSTGRES_HOST_AUTH_METHOD:-trust}'
      POSTGRES_LOG_STATEMENT: 'all' # Enable query logging (set to 'all' for all queries)
    networks:
      - elevate_net
  pgadmin:
    image: dpage/pgadmin4
    container_name: elevate-pgadmin
    restart: always
    ports:
      - '5500:80'
    environment:
      - PGADMIN_DEFAULT_EMAIL=user@shikshalokam.org
      - PGADMIN_DEFAULT_PASSWORD=password
    networks:
      - elevate_net
    logging:
      driver: none
  # samiksha:
  #   build: './'
  #   image: elevate-samiksha
  #   # image: shikshalokamqa/elevate-samiksha-service:0.0.6
  #   ports:
  #     - '5000:5000'
  #   command: ['nodemon', 'dev']
  #   environment:
  #     - MONGODB_URL=mongodb://mongo:27017
  #   # env_file:
  #   #   - ${samiksha_env}
  #   depends_on:
  #     - mongo
  #   networks:
  #     - elevate_net
  unnati:
    build: '.'
    # image: elevate-unnati
    # image: shikshalokamqa/elevate-samiksha-service:0.0.6
    container_name: unnati
    ports:
      - '5000:5000'
    volumes:
      - .:/var/src  
    command: ['nodemon', 'app.js']
    environment:
      - MONGODB_URL=mongodb://mongo:27017/elevate-diksha
    env_file:
      - ${unnati_env}
    depends_on:
      - mongo
    networks:
      - elevate_net
  
networks:
  elevate_net:
volumes:
  mongo-data:
  logs:
